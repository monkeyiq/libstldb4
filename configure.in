AC_INIT(STLdb4/stldb4.hh)

HAVE_CORRECT_ARGS=yes
AC_ARG_ENABLE(wrapdebug,
[--enable-wrapdebug            embedded db4.1 option],
[ echo -n "" ],
[ echo -n "" ],
])
dnl AC_ARG_ENABLE(wrapdebug,
dnl [--enable-wrapdebug            Option that is needed for use of embedded db4.1],
dnl [ echo -n "" ],
dnl [
dnl   HAVE_CORRECT_ARGS=no
dnl ])

AC_ARG_ENABLE(rpc,
[--enable-rpc            Option that is needed for use of embedded db4.1],
[ echo -n "" ],
[])
AC_ARG_WITH(uniquename,
        [  --with-uniquename=stldb4          Option that is needed for use of embedded db4.1],
        [ FOOEY="$withval" ],
        [ HAVE_CORRECT_ARGS=no ] )

if test "x$HAVE_CORRECT_ARGS" = "xno"; then
	AC_MSG_ERROR([Fatal Error: Run configure with atleast --enable-wrapdebug --enable-rpc --with-uniquename=stldb4 ])	
fi




STLDB4_MAJOR=0
STLDB4_MINOR=6
STLDB4_BETA=0

AC_SUBST(STLDB4_MAJOR)
AC_SUBST(STLDB4_MINOR)
AC_SUBST(STLDB4_BETA)

cd ${srcdir}; absolute_srcdir=`pwd`; cd -;

LIBSTLDB4_LA=" \$(top_builddir)/STLdb4/libstldb4.la "
AC_SUBST(LIBSTLDB4_LA)

STLDB4_VERSION=$STLDB4_MAJOR.$STLDB4_MINOR.$STLDB4_BETA
STLDB4_FULLV=$STLDB4_VERSION
AC_SUBST(STLDB4_FULLV)
AC_SUBST(STLDB4_VERSION)

VERSION_INFO="-release $STLDB4_MAJOR$STLDB4_MINOR:0:0"
AC_SUBST(VERSION_INFO)

dnl libtool versioning
LT_RELEASE=$STLDB4_MAJOR.$STLDB4_MINOR
AC_SUBST(LT_RELEASE)

VERSION=$STLDB4_VERSION
PACKAGE=stldb4

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE($PACKAGE, $VERSION)
AM_MAINTAINER_MODE

AC_CANONICAL_HOST
AC_ISC_POSIX

AC_ISC_POSIX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_STDC_HEADERS
AC_SYS_LARGEFILE
#AC_ARG_PROGRAM
#AC_DISABLE_FAST_INSTALL
AC_DISABLE_STATIC
AM_PROG_LIBTOOL






STLDB4_CF=" -O3 -pipe -DNDEBUG -I/nothing -DG_DISABLE_ASSERT -ffast-math "
STLDB4_LD=""
smartptr_assert=""
AC_ARG_ENABLE(wrapdebug,
[--enable-wrapdebug            compile with -g and -O0 debug information],
[
  if test x$enableval = xyes; then
	echo setting debug mode to on...;
	STLDB4_CF=" -O0 -g -pipe -Wall "; 
	smartptr_assert="if( !val ) { assert(val); }";
  else
	echo setting debug mode to off...
  fi
])

AC_ARG_ENABLE(profile,
[--enable-profile            compile with profile debug information],
[
  if test x$enableval = xyes; then
echo setting profile mode to on...
STLDB4_CF=" -O0 -g -pg -fprofile-arcs -ftest-coverage "; 
  else
echo setting profile mode to off...
  fi
])

AC_SUBST( STLDB4_SMARTPTR_ASSERT, $smartptr_assert )

###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################
###############################################################################

AM_FERRIS_STLPORT_OPTIONAL( 4.5.0 )
AM_FERRIS_LOKI( 2.1.0 )
AM_FERRIS_STREAMS( 0.4.0 )

###############################################################################
###############################################################################
###############################################################################
###############################################################################

echo "STLPORT_CFLAGS: $STLPORT_CFLAGS"
echo "STLPORT_LDFLAGS: $STLPORT_LDFLAGS"

CFLAGS=" $STLPORT_CFLAGS $CFLAGS $STLDB4_CF $LOKI_CFLAGS "
CXXFLAGS=" $STLPORT_CFLAGS  $CXXFLAGS $STLDB4_CF $LOKI_CFLAGS "
LDFLAGS=" $LDFLAGS $STLPORT_LDFLAGS $STLDB4_LD $LOKI_LIBS -lpthread "

AC_ARG_ENABLE(hiddensymbols,
[--enable-hiddensymbols            use hidden symbols for private APIs],
[
  if test x$enableval = xyes; then
	echo setting hidden symbol support...;
	CXXFLAGS=" $CXXFLAGS -DGCC_HASCLASSVISIBILITY -fvisibility=hidden  -fvisibility-inlines-hidden ";
	AC_DEFINE(GCC_HASCLASSVISIBILITY)
  fi
])

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(CXXCPPFLAGS)

REQUIREMENTS="ferrisloki >= 2.0.3 ferrisstreams >= 0.3.6 "
if test x"$have_stlport" = xyes; then
	REQUIREMENTS="$REQUIREMENTS stlport >= 4.5.3"
fi
AC_SUBST(REQUIREMENTS)


AC_CONFIG_SUBDIRS( db-4.6.21/build_unix )
#
# All done.
#
AC_OUTPUT([
Makefile
db-4.6.21/Makefile
STLdb4/Makefile
testsuite/Makefile
testsuite/config/Makefile
testsuite/stldb4.test/Makefile
testsuite/sampledata/Makefile
stldb4.spec
stldb4.pc
stldb4-config
],
[
chmod +x stldb4-config
])


echo "



Configuration:

	Source code location:	${srcdir}
	Compiler:		${CC} 
	CFLAGS:			${CFLAGS} 
	LDFLAGS:		${LDFLAGS} 
	IOSIZE:                 ${IOSIZE}
"


if test x"$IOSIZE" = x32; then
echo "  WARNING, 32bit IO. Will only work for files and data <2Gb in size"
fi

echo "
	The $PACKAGE version $STLDB4_VERSION software package is GPLv3+
        and Copyright (C) 2003-2010 Ben Martin
"
